{"target":{"0":0},"func":{"0":"static void v4l2_free_buffer(void *opaque, uint8_t *unused)\n\n{\n\n    V4L2Buffer* avbuf = opaque;\n\n    V4L2m2mContext *s = buf_to_m2mctx(avbuf);\n\n\n\n    if (atomic_fetch_sub(&avbuf->context_refcount, 1) == 1) {\n\n        atomic_fetch_sub_explicit(&s->refcount, 1, memory_order_acq_rel);\n\n\n\n        if (s->reinit) {\n\n            if (!atomic_load(&s->refcount))\n\n                sem_post(&s->refsync);\n\n        } else if (avbuf->context->streamon)\n\n            ff_v4l2_buffer_enqueue(avbuf);\n\n\n\n        av_buffer_unref(&avbuf->context_ref);\n\n    }\n\n}\n"},"CPG":{"0":"digraph v4l2_free_buffer {  \r\n\"1000100\" [label = \"(METHOD,v4l2_free_buffer)\" ]\r\n\"1000101\" [label = \"(PARAM,void *opaque)\" ]\r\n\"1000102\" [label = \"(PARAM,uint8_t *unused)\" ]\r\n\"1000103\" [label = \"(BLOCK,,)\" ]\r\n\"1000104\" [label = \"(LOCAL,avbuf: V4L2Buffer *)\" ]\r\n\"1000105\" [label = \"(<operator>.assignment,* avbuf = opaque)\" ]\r\n\"1000106\" [label = \"(IDENTIFIER,avbuf,* avbuf = opaque)\" ]\r\n\"1000107\" [label = \"(IDENTIFIER,opaque,* avbuf = opaque)\" ]\r\n\"1000108\" [label = \"(LOCAL,s: V4L2m2mContext *)\" ]\r\n\"1000109\" [label = \"(<operator>.assignment,*s = buf_to_m2mctx(avbuf))\" ]\r\n\"1000110\" [label = \"(IDENTIFIER,s,*s = buf_to_m2mctx(avbuf))\" ]\r\n\"1000111\" [label = \"(buf_to_m2mctx,buf_to_m2mctx(avbuf))\" ]\r\n\"1000112\" [label = \"(IDENTIFIER,avbuf,buf_to_m2mctx(avbuf))\" ]\r\n\"1000113\" [label = \"(CONTROL_STRUCTURE,if (atomic_fetch_sub(&avbuf->context_refcount, 1) == 1),if (atomic_fetch_sub(&avbuf->context_refcount, 1) == 1))\" ]\r\n\"1000114\" [label = \"(<operator>.equals,atomic_fetch_sub(&avbuf->context_refcount, 1) == 1)\" ]\r\n\"1000115\" [label = \"(atomic_fetch_sub,atomic_fetch_sub(&avbuf->context_refcount, 1))\" ]\r\n\"1000116\" [label = \"(<operator>.addressOf,&avbuf->context_refcount)\" ]\r\n\"1000117\" [label = \"(<operator>.indirectFieldAccess,avbuf->context_refcount)\" ]\r\n\"1000118\" [label = \"(IDENTIFIER,avbuf,atomic_fetch_sub(&avbuf->context_refcount, 1))\" ]\r\n\"1000119\" [label = \"(FIELD_IDENTIFIER,context_refcount,context_refcount)\" ]\r\n\"1000120\" [label = \"(LITERAL,1,atomic_fetch_sub(&avbuf->context_refcount, 1))\" ]\r\n\"1000121\" [label = \"(LITERAL,1,atomic_fetch_sub(&avbuf->context_refcount, 1) == 1)\" ]\r\n\"1000122\" [label = \"(BLOCK,,)\" ]\r\n\"1000123\" [label = \"(atomic_fetch_sub_explicit,atomic_fetch_sub_explicit(&s->refcount, 1, memory_order_acq_rel))\" ]\r\n\"1000124\" [label = \"(<operator>.addressOf,&s->refcount)\" ]\r\n\"1000125\" [label = \"(<operator>.indirectFieldAccess,s->refcount)\" ]\r\n\"1000126\" [label = \"(IDENTIFIER,s,atomic_fetch_sub_explicit(&s->refcount, 1, memory_order_acq_rel))\" ]\r\n\"1000127\" [label = \"(FIELD_IDENTIFIER,refcount,refcount)\" ]\r\n\"1000128\" [label = \"(LITERAL,1,atomic_fetch_sub_explicit(&s->refcount, 1, memory_order_acq_rel))\" ]\r\n\"1000129\" [label = \"(IDENTIFIER,memory_order_acq_rel,atomic_fetch_sub_explicit(&s->refcount, 1, memory_order_acq_rel))\" ]\r\n\"1000130\" [label = \"(CONTROL_STRUCTURE,if (s->reinit),if (s->reinit))\" ]\r\n\"1000131\" [label = \"(<operator>.indirectFieldAccess,s->reinit)\" ]\r\n\"1000132\" [label = \"(IDENTIFIER,s,if (s->reinit))\" ]\r\n\"1000133\" [label = \"(FIELD_IDENTIFIER,reinit,reinit)\" ]\r\n\"1000134\" [label = \"(BLOCK,,)\" ]\r\n\"1000135\" [label = \"(CONTROL_STRUCTURE,if (!atomic_load(&s->refcount)),if (!atomic_load(&s->refcount)))\" ]\r\n\"1000136\" [label = \"(<operator>.logicalNot,!atomic_load(&s->refcount))\" ]\r\n\"1000137\" [label = \"(atomic_load,atomic_load(&s->refcount))\" ]\r\n\"1000138\" [label = \"(<operator>.addressOf,&s->refcount)\" ]\r\n\"1000139\" [label = \"(<operator>.indirectFieldAccess,s->refcount)\" ]\r\n\"1000140\" [label = \"(IDENTIFIER,s,atomic_load(&s->refcount))\" ]\r\n\"1000141\" [label = \"(FIELD_IDENTIFIER,refcount,refcount)\" ]\r\n\"1000142\" [label = \"(sem_post,sem_post(&s->refsync))\" ]\r\n\"1000143\" [label = \"(<operator>.addressOf,&s->refsync)\" ]\r\n\"1000144\" [label = \"(<operator>.indirectFieldAccess,s->refsync)\" ]\r\n\"1000145\" [label = \"(IDENTIFIER,s,sem_post(&s->refsync))\" ]\r\n\"1000146\" [label = \"(FIELD_IDENTIFIER,refsync,refsync)\" ]\r\n\"1000147\" [label = \"(CONTROL_STRUCTURE,else,else)\" ]\r\n\"1000148\" [label = \"(CONTROL_STRUCTURE,if (avbuf->context->streamon),if (avbuf->context->streamon))\" ]\r\n\"1000149\" [label = \"(<operator>.indirectFieldAccess,avbuf->context->streamon)\" ]\r\n\"1000150\" [label = \"(<operator>.indirectFieldAccess,avbuf->context)\" ]\r\n\"1000151\" [label = \"(IDENTIFIER,avbuf,if (avbuf->context->streamon))\" ]\r\n\"1000152\" [label = \"(FIELD_IDENTIFIER,context,context)\" ]\r\n\"1000153\" [label = \"(FIELD_IDENTIFIER,streamon,streamon)\" ]\r\n\"1000154\" [label = \"(ff_v4l2_buffer_enqueue,ff_v4l2_buffer_enqueue(avbuf))\" ]\r\n\"1000155\" [label = \"(IDENTIFIER,avbuf,ff_v4l2_buffer_enqueue(avbuf))\" ]\r\n\"1000156\" [label = \"(av_buffer_unref,av_buffer_unref(&avbuf->context_ref))\" ]\r\n\"1000157\" [label = \"(<operator>.addressOf,&avbuf->context_ref)\" ]\r\n\"1000158\" [label = \"(<operator>.indirectFieldAccess,avbuf->context_ref)\" ]\r\n\"1000159\" [label = \"(IDENTIFIER,avbuf,av_buffer_unref(&avbuf->context_ref))\" ]\r\n\"1000160\" [label = \"(FIELD_IDENTIFIER,context_ref,context_ref)\" ]\r\n\"1000161\" [label = \"(METHOD_RETURN,static void)\" ]\r\n  \"1000100\" -> \"1000101\"  [ label = \"AST: \"] \r\n  \"1000100\" -> \"1000102\"  [ label = \"AST: \"] \r\n  \"1000100\" -> \"1000103\"  [ label = \"AST: \"] \r\n  \"1000100\" -> \"1000161\"  [ label = \"AST: \"] \r\n  \"1000103\" -> \"1000104\"  [ label = \"AST: \"] \r\n  \"1000103\" -> \"1000105\"  [ label = \"AST: \"] \r\n  \"1000103\" -> \"1000108\"  [ label = \"AST: \"] \r\n  \"1000103\" -> \"1000109\"  [ label = \"AST: \"] \r\n  \"1000103\" -> \"1000113\"  [ label = \"AST: \"] \r\n  \"1000105\" -> \"1000106\"  [ label = \"AST: \"] \r\n  \"1000105\" -> \"1000107\"  [ label = \"AST: \"] \r\n  \"1000109\" -> \"1000110\"  [ label = \"AST: \"] \r\n  \"1000109\" -> \"1000111\"  [ label = \"AST: \"] \r\n  \"1000111\" -> \"1000112\"  [ label = \"AST: \"] \r\n  \"1000113\" -> \"1000114\"  [ label = \"AST: \"] \r\n  \"1000113\" -> \"1000122\"  [ label = \"AST: \"] \r\n  \"1000114\" -> \"1000115\"  [ label = \"AST: \"] \r\n  \"1000114\" -> \"1000121\"  [ label = \"AST: \"] \r\n  \"1000115\" -> \"1000116\"  [ label = \"AST: \"] \r\n  \"1000115\" -> \"1000120\"  [ label = \"AST: \"] \r\n  \"1000116\" -> \"1000117\"  [ label = \"AST: \"] \r\n  \"1000117\" -> \"1000118\"  [ label = \"AST: \"] \r\n  \"1000117\" -> \"1000119\"  [ label = \"AST: \"] \r\n  \"1000122\" -> \"1000123\"  [ label = \"AST: \"] \r\n  \"1000122\" -> \"1000130\"  [ label = \"AST: \"] \r\n  \"1000122\" -> \"1000156\"  [ label = \"AST: \"] \r\n  \"1000123\" -> \"1000124\"  [ label = \"AST: \"] \r\n  \"1000123\" -> \"1000128\"  [ label = \"AST: \"] \r\n  \"1000123\" -> \"1000129\"  [ label = \"AST: \"] \r\n  \"1000124\" -> \"1000125\"  [ label = \"AST: \"] \r\n  \"1000125\" -> \"1000126\"  [ label = \"AST: \"] \r\n  \"1000125\" -> \"1000127\"  [ label = \"AST: \"] \r\n  \"1000130\" -> \"1000131\"  [ label = \"AST: \"] \r\n  \"1000130\" -> \"1000134\"  [ label = \"AST: \"] \r\n  \"1000130\" -> \"1000147\"  [ label = \"AST: \"] \r\n  \"1000131\" -> \"1000132\"  [ label = \"AST: \"] \r\n  \"1000131\" -> \"1000133\"  [ label = \"AST: \"] \r\n  \"1000134\" -> \"1000135\"  [ label = \"AST: \"] \r\n  \"1000135\" -> \"1000136\"  [ label = \"AST: \"] \r\n  \"1000135\" -> \"1000142\"  [ label = \"AST: \"] \r\n  \"1000136\" -> \"1000137\"  [ label = \"AST: \"] \r\n  \"1000137\" -> \"1000138\"  [ label = \"AST: \"] \r\n  \"1000138\" -> \"1000139\"  [ label = \"AST: \"] \r\n  \"1000139\" -> \"1000140\"  [ label = \"AST: \"] \r\n  \"1000139\" -> \"1000141\"  [ label = \"AST: \"] \r\n  \"1000142\" -> \"1000143\"  [ label = \"AST: \"] \r\n  \"1000143\" -> \"1000144\"  [ label = \"AST: \"] \r\n  \"1000144\" -> \"1000145\"  [ label = \"AST: \"] \r\n  \"1000144\" -> \"1000146\"  [ label = \"AST: \"] \r\n  \"1000147\" -> \"1000148\"  [ label = \"AST: \"] \r\n  \"1000148\" -> \"1000149\"  [ label = \"AST: \"] \r\n  \"1000148\" -> \"1000154\"  [ label = \"AST: \"] \r\n  \"1000149\" -> \"1000150\"  [ label = \"AST: \"] \r\n  \"1000149\" -> \"1000153\"  [ label = \"AST: \"] \r\n  \"1000150\" -> \"1000151\"  [ label = \"AST: \"] \r\n  \"1000150\" -> \"1000152\"  [ label = \"AST: \"] \r\n  \"1000154\" -> \"1000155\"  [ label = \"AST: \"] \r\n  \"1000156\" -> \"1000157\"  [ label = \"AST: \"] \r\n  \"1000157\" -> \"1000158\"  [ label = \"AST: \"] \r\n  \"1000158\" -> \"1000159\"  [ label = \"AST: \"] \r\n  \"1000158\" -> \"1000160\"  [ label = \"AST: \"] \r\n  \"1000105\" -> \"1000111\"  [ label = \"CFG: \"] \r\n  \"1000109\" -> \"1000119\"  [ label = \"CFG: \"] \r\n  \"1000111\" -> \"1000109\"  [ label = \"CFG: \"] \r\n  \"1000114\" -> \"1000161\"  [ label = \"CFG: \"] \r\n  \"1000114\" -> \"1000127\"  [ label = \"CFG: \"] \r\n  \"1000115\" -> \"1000114\"  [ label = \"CFG: \"] \r\n  \"1000116\" -> \"1000115\"  [ label = \"CFG: \"] \r\n  \"1000117\" -> \"1000116\"  [ label = \"CFG: \"] \r\n  \"1000119\" -> \"1000117\"  [ label = \"CFG: \"] \r\n  \"1000123\" -> \"1000133\"  [ label = \"CFG: \"] \r\n  \"1000124\" -> \"1000123\"  [ label = \"CFG: \"] \r\n  \"1000125\" -> \"1000124\"  [ label = \"CFG: \"] \r\n  \"1000127\" -> \"1000125\"  [ label = \"CFG: \"] \r\n  \"1000131\" -> \"1000141\"  [ label = \"CFG: \"] \r\n  \"1000131\" -> \"1000152\"  [ label = \"CFG: \"] \r\n  \"1000133\" -> \"1000131\"  [ label = \"CFG: \"] \r\n  \"1000136\" -> \"1000146\"  [ label = \"CFG: \"] \r\n  \"1000136\" -> \"1000160\"  [ label = \"CFG: \"] \r\n  \"1000137\" -> \"1000136\"  [ label = \"CFG: \"] \r\n  \"1000138\" -> \"1000137\"  [ label = \"CFG: \"] \r\n  \"1000139\" -> \"1000138\"  [ label = \"CFG: \"] \r\n  \"1000141\" -> \"1000139\"  [ label = \"CFG: \"] \r\n  \"1000142\" -> \"1000160\"  [ label = \"CFG: \"] \r\n  \"1000143\" -> \"1000142\"  [ label = \"CFG: \"] \r\n  \"1000144\" -> \"1000143\"  [ label = \"CFG: \"] \r\n  \"1000146\" -> \"1000144\"  [ label = \"CFG: \"] \r\n  \"1000149\" -> \"1000154\"  [ label = \"CFG: \"] \r\n  \"1000149\" -> \"1000160\"  [ label = \"CFG: \"] \r\n  \"1000150\" -> \"1000153\"  [ label = \"CFG: \"] \r\n  \"1000152\" -> \"1000150\"  [ label = \"CFG: \"] \r\n  \"1000153\" -> \"1000149\"  [ label = \"CFG: \"] \r\n  \"1000154\" -> \"1000160\"  [ label = \"CFG: \"] \r\n  \"1000156\" -> \"1000161\"  [ label = \"CFG: \"] \r\n  \"1000157\" -> \"1000156\"  [ label = \"CFG: \"] \r\n  \"1000158\" -> \"1000157\"  [ label = \"CFG: \"] \r\n  \"1000160\" -> \"1000158\"  [ label = \"CFG: \"] \r\n  \"1000100\" -> \"1000105\"  [ label = \"CFG: \"] \r\n  \"1000142\" -> \"1000161\"  [ label = \"DDG: sem_post(&s->refsync)\"] \r\n  \"1000105\" -> \"1000161\"  [ label = \"DDG: opaque\"] \r\n  \"1000156\" -> \"1000161\"  [ label = \"DDG: &avbuf->context_ref\"] \r\n  \"1000114\" -> \"1000161\"  [ label = \"DDG: atomic_fetch_sub(&avbuf->context_refcount, 1) == 1\"] \r\n  \"1000123\" -> \"1000161\"  [ label = \"DDG: atomic_fetch_sub_explicit(&s->refcount, 1, memory_order_acq_rel)\"] \r\n  \"1000114\" -> \"1000161\"  [ label = \"DDG: atomic_fetch_sub(&avbuf->context_refcount, 1)\"] \r\n  \"1000154\" -> \"1000161\"  [ label = \"DDG: ff_v4l2_buffer_enqueue(avbuf)\"] \r\n  \"1000123\" -> \"1000161\"  [ label = \"DDG: &s->refcount\"] \r\n  \"1000123\" -> \"1000161\"  [ label = \"DDG: memory_order_acq_rel\"] \r\n  \"1000154\" -> \"1000161\"  [ label = \"DDG: avbuf\"] \r\n  \"1000102\" -> \"1000161\"  [ label = \"DDG: unused\"] \r\n  \"1000111\" -> \"1000161\"  [ label = \"DDG: avbuf\"] \r\n  \"1000101\" -> \"1000161\"  [ label = \"DDG: opaque\"] \r\n  \"1000109\" -> \"1000161\"  [ label = \"DDG: s\"] \r\n  \"1000142\" -> \"1000161\"  [ label = \"DDG: &s->refsync\"] \r\n  \"1000136\" -> \"1000161\"  [ label = \"DDG: !atomic_load(&s->refcount)\"] \r\n  \"1000156\" -> \"1000161\"  [ label = \"DDG: av_buffer_unref(&avbuf->context_ref)\"] \r\n  \"1000137\" -> \"1000161\"  [ label = \"DDG: &s->refcount\"] \r\n  \"1000109\" -> \"1000161\"  [ label = \"DDG: buf_to_m2mctx(avbuf)\"] \r\n  \"1000115\" -> \"1000161\"  [ label = \"DDG: &avbuf->context_refcount\"] \r\n  \"1000136\" -> \"1000161\"  [ label = \"DDG: atomic_load(&s->refcount)\"] \r\n  \"1000100\" -> \"1000101\"  [ label = \"DDG: \"] \r\n  \"1000100\" -> \"1000102\"  [ label = \"DDG: \"] \r\n  \"1000101\" -> \"1000105\"  [ label = \"DDG: opaque\"] \r\n  \"1000100\" -> \"1000105\"  [ label = \"DDG: \"] \r\n  \"1000111\" -> \"1000109\"  [ label = \"DDG: avbuf\"] \r\n  \"1000100\" -> \"1000109\"  [ label = \"DDG: \"] \r\n  \"1000105\" -> \"1000111\"  [ label = \"DDG: avbuf\"] \r\n  \"1000100\" -> \"1000111\"  [ label = \"DDG: \"] \r\n  \"1000115\" -> \"1000114\"  [ label = \"DDG: &avbuf->context_refcount\"] \r\n  \"1000115\" -> \"1000114\"  [ label = \"DDG: 1\"] \r\n  \"1000100\" -> \"1000115\"  [ label = \"DDG: \"] \r\n  \"1000100\" -> \"1000114\"  [ label = \"DDG: \"] \r\n  \"1000100\" -> \"1000123\"  [ label = \"DDG: \"] \r\n  \"1000137\" -> \"1000136\"  [ label = \"DDG: &s->refcount\"] \r\n  \"1000123\" -> \"1000137\"  [ label = \"DDG: &s->refcount\"] \r\n  \"1000111\" -> \"1000154\"  [ label = \"DDG: avbuf\"] \r\n  \"1000100\" -> \"1000154\"  [ label = \"DDG: \"] \r\n  \"1000114\" -> \"1000125\"  [ label = \"CDG: \"] \r\n  \"1000114\" -> \"1000131\"  [ label = \"CDG: \"] \r\n  \"1000114\" -> \"1000127\"  [ label = \"CDG: \"] \r\n  \"1000114\" -> \"1000158\"  [ label = \"CDG: \"] \r\n  \"1000114\" -> \"1000156\"  [ label = \"CDG: \"] \r\n  \"1000114\" -> \"1000123\"  [ label = \"CDG: \"] \r\n  \"1000114\" -> \"1000124\"  [ label = \"CDG: \"] \r\n  \"1000114\" -> \"1000160\"  [ label = \"CDG: \"] \r\n  \"1000114\" -> \"1000133\"  [ label = \"CDG: \"] \r\n  \"1000114\" -> \"1000157\"  [ label = \"CDG: \"] \r\n  \"1000131\" -> \"1000153\"  [ label = \"CDG: \"] \r\n  \"1000131\" -> \"1000137\"  [ label = \"CDG: \"] \r\n  \"1000131\" -> \"1000141\"  [ label = \"CDG: \"] \r\n  \"1000131\" -> \"1000152\"  [ label = \"CDG: \"] \r\n  \"1000131\" -> \"1000150\"  [ label = \"CDG: \"] \r\n  \"1000131\" -> \"1000139\"  [ label = \"CDG: \"] \r\n  \"1000131\" -> \"1000136\"  [ label = \"CDG: \"] \r\n  \"1000131\" -> \"1000149\"  [ label = \"CDG: \"] \r\n  \"1000131\" -> \"1000138\"  [ label = \"CDG: \"] \r\n  \"1000136\" -> \"1000143\"  [ label = \"CDG: \"] \r\n  \"1000136\" -> \"1000142\"  [ label = \"CDG: \"] \r\n  \"1000136\" -> \"1000146\"  [ label = \"CDG: \"] \r\n  \"1000136\" -> \"1000144\"  [ label = \"CDG: \"] \r\n  \"1000149\" -> \"1000154\"  [ label = \"CDG: \"] \r\n}\r\n"},"CDG":{"0":"digraph v4l2_free_buffer {  \r\n\"1000114\" [label = \"(<operator>.equals,atomic_fetch_sub(&avbuf->context_refcount, 1) == 1)\" ]\r\n\"1000123\" [label = \"(atomic_fetch_sub_explicit,atomic_fetch_sub_explicit(&s->refcount, 1, memory_order_acq_rel))\" ]\r\n\"1000124\" [label = \"(<operator>.addressOf,&s->refcount)\" ]\r\n\"1000125\" [label = \"(<operator>.indirectFieldAccess,s->refcount)\" ]\r\n\"1000127\" [label = \"(FIELD_IDENTIFIER,refcount,refcount)\" ]\r\n\"1000131\" [label = \"(<operator>.indirectFieldAccess,s->reinit)\" ]\r\n\"1000133\" [label = \"(FIELD_IDENTIFIER,reinit,reinit)\" ]\r\n\"1000136\" [label = \"(<operator>.logicalNot,!atomic_load(&s->refcount))\" ]\r\n\"1000137\" [label = \"(atomic_load,atomic_load(&s->refcount))\" ]\r\n\"1000138\" [label = \"(<operator>.addressOf,&s->refcount)\" ]\r\n\"1000139\" [label = \"(<operator>.indirectFieldAccess,s->refcount)\" ]\r\n\"1000141\" [label = \"(FIELD_IDENTIFIER,refcount,refcount)\" ]\r\n\"1000142\" [label = \"(sem_post,sem_post(&s->refsync))\" ]\r\n\"1000143\" [label = \"(<operator>.addressOf,&s->refsync)\" ]\r\n\"1000144\" [label = \"(<operator>.indirectFieldAccess,s->refsync)\" ]\r\n\"1000146\" [label = \"(FIELD_IDENTIFIER,refsync,refsync)\" ]\r\n\"1000149\" [label = \"(<operator>.indirectFieldAccess,avbuf->context->streamon)\" ]\r\n\"1000150\" [label = \"(<operator>.indirectFieldAccess,avbuf->context)\" ]\r\n\"1000152\" [label = \"(FIELD_IDENTIFIER,context,context)\" ]\r\n\"1000153\" [label = \"(FIELD_IDENTIFIER,streamon,streamon)\" ]\r\n\"1000154\" [label = \"(ff_v4l2_buffer_enqueue,ff_v4l2_buffer_enqueue(avbuf))\" ]\r\n\"1000156\" [label = \"(av_buffer_unref,av_buffer_unref(&avbuf->context_ref))\" ]\r\n\"1000157\" [label = \"(<operator>.addressOf,&avbuf->context_ref)\" ]\r\n\"1000158\" [label = \"(<operator>.indirectFieldAccess,avbuf->context_ref)\" ]\r\n\"1000160\" [label = \"(FIELD_IDENTIFIER,context_ref,context_ref)\" ]\r\n  \"1000114\" -> \"1000125\" \r\n  \"1000114\" -> \"1000131\" \r\n  \"1000114\" -> \"1000127\" \r\n  \"1000114\" -> \"1000158\" \r\n  \"1000114\" -> \"1000156\" \r\n  \"1000114\" -> \"1000123\" \r\n  \"1000114\" -> \"1000124\" \r\n  \"1000114\" -> \"1000160\" \r\n  \"1000114\" -> \"1000133\" \r\n  \"1000114\" -> \"1000157\" \r\n  \"1000131\" -> \"1000153\" \r\n  \"1000131\" -> \"1000137\" \r\n  \"1000131\" -> \"1000141\" \r\n  \"1000131\" -> \"1000152\" \r\n  \"1000131\" -> \"1000150\" \r\n  \"1000131\" -> \"1000139\" \r\n  \"1000131\" -> \"1000136\" \r\n  \"1000131\" -> \"1000149\" \r\n  \"1000131\" -> \"1000138\" \r\n  \"1000136\" -> \"1000143\" \r\n  \"1000136\" -> \"1000142\" \r\n  \"1000136\" -> \"1000146\" \r\n  \"1000136\" -> \"1000144\" \r\n  \"1000149\" -> \"1000154\" \r\n}\r\n"},"DDG":{"0":"digraph v4l2_free_buffer {  \r\n\"1000100\" [label = \"(METHOD,v4l2_free_buffer)\" ]\r\n\"1000161\" [label = \"(METHOD_RETURN,static void)\" ]\r\n\"1000101\" [label = \"(PARAM,void *opaque)\" ]\r\n\"1000102\" [label = \"(PARAM,uint8_t *unused)\" ]\r\n\"1000105\" [label = \"(<operator>.assignment,* avbuf = opaque)\" ]\r\n\"1000105\" [label = \"(<operator>.assignment,* avbuf = opaque)\" ]\r\n\"1000105\" [label = \"(<operator>.assignment,* avbuf = opaque)\" ]\r\n\"1000109\" [label = \"(<operator>.assignment,*s = buf_to_m2mctx(avbuf))\" ]\r\n\"1000109\" [label = \"(<operator>.assignment,*s = buf_to_m2mctx(avbuf))\" ]\r\n\"1000109\" [label = \"(<operator>.assignment,*s = buf_to_m2mctx(avbuf))\" ]\r\n\"1000111\" [label = \"(buf_to_m2mctx,buf_to_m2mctx(avbuf))\" ]\r\n\"1000114\" [label = \"(<operator>.equals,atomic_fetch_sub(&avbuf->context_refcount, 1) == 1)\" ]\r\n\"1000114\" [label = \"(<operator>.equals,atomic_fetch_sub(&avbuf->context_refcount, 1) == 1)\" ]\r\n\"1000115\" [label = \"(atomic_fetch_sub,atomic_fetch_sub(&avbuf->context_refcount, 1))\" ]\r\n\"1000115\" [label = \"(atomic_fetch_sub,atomic_fetch_sub(&avbuf->context_refcount, 1))\" ]\r\n\"1000114\" [label = \"(<operator>.equals,atomic_fetch_sub(&avbuf->context_refcount, 1) == 1)\" ]\r\n\"1000123\" [label = \"(atomic_fetch_sub_explicit,atomic_fetch_sub_explicit(&s->refcount, 1, memory_order_acq_rel))\" ]\r\n\"1000123\" [label = \"(atomic_fetch_sub_explicit,atomic_fetch_sub_explicit(&s->refcount, 1, memory_order_acq_rel))\" ]\r\n\"1000123\" [label = \"(atomic_fetch_sub_explicit,atomic_fetch_sub_explicit(&s->refcount, 1, memory_order_acq_rel))\" ]\r\n\"1000123\" [label = \"(atomic_fetch_sub_explicit,atomic_fetch_sub_explicit(&s->refcount, 1, memory_order_acq_rel))\" ]\r\n\"1000136\" [label = \"(<operator>.logicalNot,!atomic_load(&s->refcount))\" ]\r\n\"1000136\" [label = \"(<operator>.logicalNot,!atomic_load(&s->refcount))\" ]\r\n\"1000137\" [label = \"(atomic_load,atomic_load(&s->refcount))\" ]\r\n\"1000142\" [label = \"(sem_post,sem_post(&s->refsync))\" ]\r\n\"1000142\" [label = \"(sem_post,sem_post(&s->refsync))\" ]\r\n\"1000154\" [label = \"(ff_v4l2_buffer_enqueue,ff_v4l2_buffer_enqueue(avbuf))\" ]\r\n\"1000154\" [label = \"(ff_v4l2_buffer_enqueue,ff_v4l2_buffer_enqueue(avbuf))\" ]\r\n\"1000156\" [label = \"(av_buffer_unref,av_buffer_unref(&avbuf->context_ref))\" ]\r\n\"1000156\" [label = \"(av_buffer_unref,av_buffer_unref(&avbuf->context_ref))\" ]\r\n  \"1000142\" -> \"1000161\"  [ label = \"sem_post(&s->refsync)\"] \r\n  \"1000105\" -> \"1000161\"  [ label = \"opaque\"] \r\n  \"1000156\" -> \"1000161\"  [ label = \"&avbuf->context_ref\"] \r\n  \"1000114\" -> \"1000161\"  [ label = \"atomic_fetch_sub(&avbuf->context_refcount, 1) == 1\"] \r\n  \"1000123\" -> \"1000161\"  [ label = \"atomic_fetch_sub_explicit(&s->refcount, 1, memory_order_acq_rel)\"] \r\n  \"1000114\" -> \"1000161\"  [ label = \"atomic_fetch_sub(&avbuf->context_refcount, 1)\"] \r\n  \"1000154\" -> \"1000161\"  [ label = \"ff_v4l2_buffer_enqueue(avbuf)\"] \r\n  \"1000123\" -> \"1000161\"  [ label = \"&s->refcount\"] \r\n  \"1000123\" -> \"1000161\"  [ label = \"memory_order_acq_rel\"] \r\n  \"1000154\" -> \"1000161\"  [ label = \"avbuf\"] \r\n  \"1000102\" -> \"1000161\"  [ label = \"unused\"] \r\n  \"1000111\" -> \"1000161\"  [ label = \"avbuf\"] \r\n  \"1000101\" -> \"1000161\"  [ label = \"opaque\"] \r\n  \"1000109\" -> \"1000161\"  [ label = \"s\"] \r\n  \"1000142\" -> \"1000161\"  [ label = \"&s->refsync\"] \r\n  \"1000136\" -> \"1000161\"  [ label = \"!atomic_load(&s->refcount)\"] \r\n  \"1000156\" -> \"1000161\"  [ label = \"av_buffer_unref(&avbuf->context_ref)\"] \r\n  \"1000137\" -> \"1000161\"  [ label = \"&s->refcount\"] \r\n  \"1000109\" -> \"1000161\"  [ label = \"buf_to_m2mctx(avbuf)\"] \r\n  \"1000115\" -> \"1000161\"  [ label = \"&avbuf->context_refcount\"] \r\n  \"1000136\" -> \"1000161\"  [ label = \"atomic_load(&s->refcount)\"] \r\n  \"1000100\" -> \"1000101\" \r\n  \"1000100\" -> \"1000102\" \r\n  \"1000101\" -> \"1000105\"  [ label = \"opaque\"] \r\n  \"1000100\" -> \"1000105\" \r\n  \"1000111\" -> \"1000109\"  [ label = \"avbuf\"] \r\n  \"1000100\" -> \"1000109\" \r\n  \"1000105\" -> \"1000111\"  [ label = \"avbuf\"] \r\n  \"1000100\" -> \"1000111\" \r\n  \"1000115\" -> \"1000114\"  [ label = \"&avbuf->context_refcount\"] \r\n  \"1000115\" -> \"1000114\"  [ label = \"1\"] \r\n  \"1000100\" -> \"1000115\" \r\n  \"1000100\" -> \"1000114\" \r\n  \"1000100\" -> \"1000123\" \r\n  \"1000137\" -> \"1000136\"  [ label = \"&s->refcount\"] \r\n  \"1000123\" -> \"1000137\"  [ label = \"&s->refcount\"] \r\n  \"1000111\" -> \"1000154\"  [ label = \"avbuf\"] \r\n  \"1000100\" -> \"1000154\" \r\n}\r\n"},"No2St":{"0":{"1":[{"1000100":"static void v4l2_free_buffer (void *opaque,uint8_t *unused)"},{"1000101":"void *opaque"},{"1000102":"uint8_t *unused"},{"1000161":"static void"},{"1000225":"void *opaque"},{"1000226":"uint8_t *unused"}],"3":[{"1000103":""}],"5":[{"1000105":"* avbuf = opaque"},{"1000106":"avbuf"},{"1000107":"opaque"}],"7":[{"1000109":"*s = buf_to_m2mctx(avbuf)"},{"1000110":"s"},{"1000111":"buf_to_m2mctx(avbuf)"},{"1000112":"avbuf"}],"11":[{"1000113":"if (atomic_fetch_sub(&avbuf->context_refcount, 1) == 1)"},{"1000114":"atomic_fetch_sub(&avbuf->context_refcount, 1) == 1"},{"1000115":"atomic_fetch_sub(&avbuf->context_refcount, 1)"},{"1000116":"&avbuf->context_refcount"},{"1000117":"avbuf->context_refcount"},{"1000118":"avbuf"},{"1000119":"context_refcount"},{"1000120":"1"},{"1000121":"1"},{"1000122":""}],"13":[{"1000123":"atomic_fetch_sub_explicit(&s->refcount, 1, memory_order_acq_rel)"},{"1000124":"&s->refcount"},{"1000125":"s->refcount"},{"1000126":"s"},{"1000127":"refcount"},{"1000128":"1"},{"1000129":"memory_order_acq_rel"}],"17":[{"1000130":"if (s->reinit)"},{"1000131":"s->reinit"},{"1000132":"s"},{"1000133":"reinit"},{"1000134":""}],"19":[{"1000135":"if (!atomic_load(&s->refcount))"},{"1000136":"!atomic_load(&s->refcount)"},{"1000137":"atomic_load(&s->refcount)"},{"1000138":"&s->refcount"},{"1000139":"s->refcount"},{"1000140":"s"},{"1000141":"refcount"}],"21":[{"1000142":"sem_post(&s->refsync)"},{"1000143":"&s->refsync"},{"1000144":"s->refsync"},{"1000145":"s"},{"1000146":"refsync"}],"23":[{"1000147":"else"},{"1000148":"if (avbuf->context->streamon)"},{"1000149":"avbuf->context->streamon"},{"1000150":"avbuf->context"},{"1000151":"avbuf"},{"1000152":"context"},{"1000153":"streamon"}],"25":[{"1000154":"ff_v4l2_buffer_enqueue(avbuf)"},{"1000155":"avbuf"}],"29":[{"1000156":"av_buffer_unref(&avbuf->context_ref)"},{"1000157":"&avbuf->context_ref"},{"1000158":"avbuf->context_ref"},{"1000159":"avbuf"},{"1000160":"context_ref"}]}}}